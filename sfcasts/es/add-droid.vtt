WEBVTT

00:00:01.066 --> 00:00:02.636 align:middle
Puede que te estés preguntando Espera,

00:00:02.956 --> 00:00:06.436 align:middle
¿realmente necesito crear un objeto
StarshipDroid cada vez que quiero

00:00:06.436 --> 00:00:08.346 align:middle
simplemente asignar un
droide a una nave estelar?

00:00:08.756 --> 00:00:10.266 align:middle
Creo que es demasiado trabajo.

00:00:10.656 --> 00:00:14.666 align:middle
¿Podríamos volver a los viejos tiempos en los que
bastaba con llamar a $ship->addDroid($droid)?

00:00:15.026 --> 00:00:18.766 align:middle
¡Sí! Esto no funcionará todavía,
¡pero eso nunca nos ha detenido antes!

00:00:19.236 --> 00:00:23.096 align:middle
Carga los accesorios: ¡Ay!

00:00:23.296 --> 00:00:26.976 align:middle
Propiedad indefinida: App\Entity\Starship::$droids
No es exactamente una sorpresa,

00:00:26.976 --> 00:00:30.426 align:middle
ya que estamos llamando a la propiedad
droids, muerta hace tiempo, en addDroid().

00:00:31.056 --> 00:00:34.996 align:middle
Lo primero en nuestra lista es comprobar si
el Starship ya tiene el droide en cuestión.

00:00:35.556 --> 00:00:39.926 align:middle
Para que esto ocurra, cambia la propiedad
para que utilice el método getDroids().

00:00:40.676 --> 00:00:43.896 align:middle
Pero espera, $this->getDroids()->add()
no va a ser suficiente.

00:00:44.396 --> 00:00:47.766 align:middle
En su lugar, vamos a arremangarnos y
crear la entidad de unión aquí mismo:

00:00:48.236 --> 00:00:52.196 align:middle
$starshipDroid = new StarshipDroid()
$starshipDroid->setDroid($droid)

00:00:52.196 --> 00:00:57.976 align:middle
y $starshipDroid->setStarship($this): Hemos
establecido el lado propietario de la relación,

00:00:58.336 --> 00:00:59.656 align:middle
pero vamos a sincronizar también el otro lado.

00:00:59.656 --> 00:01:04.466 align:middle
Podemos hacerlo llamando a
$droid->starshipDroids->add($starshipDroid).

00:01:05.256 --> 00:01:09.366 align:middle
Dale otra vuelta a las
fijaciones: Ajá, un nuevo error.

00:01:10.326 --> 00:01:13.976 align:middle
Éste es bastante común en Doctrine,
aunque no siempre fácil de entender:

00:01:14.486 --> 00:01:18.336 align:middle
Se ha encontrado una nueva entidad a través de la
relación Starship#starshipDroids que no estaba configurada

00:01:18.336 --> 00:01:20.996 align:middle
para persistir en cascada
para la entidad StarshipDroid.

00:01:21.556 --> 00:01:25.526 align:middle
Es una forma muy elegante de decir que
hemos creado un nuevo objeto StarshipDroid

00:01:25.756 --> 00:01:28.096 align:middle
y le hemos dicho a Doctrine que
persista su relación Starship.

00:01:28.616 --> 00:01:31.956 align:middle
Pero nunca le hemos dicho a Doctrine que
persista el propio objeto StarshipDroid.

00:01:32.466 --> 00:01:35.896 align:middle
Aquí está el problema: no tenemos
acceso al gestor de entidades.

00:01:36.246 --> 00:01:39.336 align:middle
Así que no podemos decir simplemente
$entityManager->persist($starshipDroid).

00:01:39.846 --> 00:01:42.766 align:middle
En su lugar, vamos a apoyarnos en
algo llamado cascade=['persist'],

00:01:43.326 --> 00:01:44.906 align:middle
en lo que me sumergiré ahora mismo.
